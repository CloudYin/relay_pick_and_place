<?xml version="1.0"?>

<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
 
  <!-- Non-standard joint names:
       - Create a file [robot_moveit_config]/config/joint_names.yaml
           controller_joint_names: [joint_1, joint_2, ... joint_N] 
       - Update with joint names for your robot (in order expected by rbt controller)
       - and uncomment the following line: -->
  <rosparam command="load" file="$(find dualarm_moveit_config)/config/joint_names.yaml"/>
 
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <arg name="sim" default="true" />

  <!-- Set gripper -->
  <arg name="gripper" default="pg70" />

  <!-- Set STO handler -->
  <arg name="sto" default="pnoz"/>
  <arg name="api_spec_file" default="$(find prbt_hardware_support)/config/modbus_api_spec_$(arg sto).yaml" />
 
  <!-- Set braketest usage -->
  <arg name="has_braketest_support" default="false"/>

  <!-- Set operation mode support -->
  <arg name="has_operation_mode_support" default="false"/>

  <!-- Load robot description to parameter server. Can be set to false to let someone else load the model -->
  <arg name="load_robot_description" default="true" />

  <!-- Start RViz with default configuration settings. Once you have changed the configuration and have saved
       it inside your package folder, set the path and file name here. -->
  <arg name="rviz_config" default="$(find dualarm_moveit_config)/launch/moveit.rviz" />

  <!-- configuration for moveit -->
  <arg name="pipeline" default="ompl" /><!-- Choose planning pipeline -->
  <arg name="capabilities" default=""/> <!-- define capabilites that are loaded on start (space seperated) -->
  <arg name="disable_capabilities" default=""/> <!-- inhibit capabilites (space seperated) -->

  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find dualarm_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="$(arg load_robot_description)" />
    <arg name="gripper" value="$(arg gripper)" />
  </include>

  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <!-- publish the robot state (tf transforms) -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
    </node>
  </group>

  <!-- run the "real robot" interface nodes -->
  <!--   - this includes: robot_state, canopen, and sto nodes -->
  <group unless="$(arg sim)">
    <include file="$(find prbt_support)/launch/robot.launch" >
      <arg name="gripper" value="$(arg gripper)" />
      <arg name="load_robot_description" value="false" />
      <arg name="sto" value="$(arg sto)" />
      <arg name="api_spec_file" value="$(arg api_spec_file)" />
      <arg name="has_braketest_support" value="$(arg has_braketest_support)" />
      <arg name="has_operation_mode_support" value="$(arg has_operation_mode_support)" />
    </include>
  </group>

  <include file="$(find dualarm_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
    <arg name="fake_execution" value="$(arg sim)"/>
    <arg name="pipeline" value="$(arg pipeline)" />
    <arg name="gripper" value="$(arg gripper)" />
    <arg name="load_robot_description" value="$(arg load_robot_description)" />
    <arg name="capabilities" value="$(arg capabilities)" />
    <arg name="disable_capabilities" value="$(arg disable_capabilities)" />
  </include>

  <include file="$(find dualarm_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

</launch>